import nodemailer from 'nodemailer';
import { GoogleMeetService } from './googleMeetService';

interface AppointmentEmailData {
    customerName: string;
    customerEmail: string;
    consultantName: string;
    appointmentDate: string;
    startTime: string;
    endTime: string;
    meetingInfo?: {
        meet_url: string;
        meeting_id: string;
        meeting_password?: string; // Optional - ch·ªâ d√†nh cho backward compatibility
    };
    appointmentId: string;
    customerNotes?: string;
}

export class EmailNotificationService {
    private static getTransporter() {
        return nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL_FOR_VERIFY ?? '',
                pass: process.env.EMAIL_APP_PASSWORD ?? ''
            }
        });
    }

    /**
     * Send appointment confirmation email with REAL Google Meet link
     */
    public static async sendAppointmentConfirmation(emailData: AppointmentEmailData): Promise<{ success: boolean; message: string }> {
        try {
            if (!emailData.meetingInfo) {
                throw new Error('Meeting information is required for appointment confirmation');
            }

            const transporter = this.getTransporter();

            const mailContent = {
                from: `"GenCare - X√°c nh·∫≠n l·ªãch t∆∞ v·∫•n" <${process.env.EMAIL_FOR_VERIFY}>`,
                to: emailData.customerEmail,
                subject: `‚úÖ L·ªãch t∆∞ v·∫•n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n - ${emailData.appointmentDate} l√∫c ${emailData.startTime}`,
                html: `
                <body style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px;">
                    <div style="max-width: 600px; margin: auto; background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
                        <h2 style="color: #2a9d8f; text-align: center;">üéâ L·ªãch t∆∞ v·∫•n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n!</h2>
                        
                        <div style="background-color: #e9f7f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
                            <h3 style="color: #2a9d8f; margin-top: 0;">üìÖ TH√îNG TIN CU·ªòC H·∫∏N</h3>
                            <p><strong>üë©‚Äç‚öïÔ∏è Chuy√™n gia t∆∞ v·∫•n:</strong> ${emailData.consultantName}</p>
                            <p><strong>üìÖ Ng√†y:</strong> ${emailData.appointmentDate}</p>
                            <p><strong>‚è∞ Th·ªùi gian:</strong> ${emailData.startTime} - ${emailData.endTime}</p>
                            <p><strong>üí¨ Ghi ch√∫ c·ªßa b·∫°n:</strong> ${emailData.customerNotes ?? 'Kh√¥ng c√≥'}</p>
                        </div>

                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #ffc107;">
                            <h3 style="color: #856404; margin-top: 0;">üìπ TH√îNG TIN GOOGLE MEET</h3>
                            <p style="margin: 10px 0;">
                                <strong>üîó Link tham gia:</strong><br>
                                <a href="${emailData.meetingInfo.meet_url}" style="color: #007bff; text-decoration: none; word-break: break-all;">
                                    ${emailData.meetingInfo.meet_url}
                                </a>
                            </p>
                            <p style="margin: 10px 0;">
                                <strong>üÜî Meeting ID:</strong> <code style="background-color: #f8f9fa; padding: 2px 4px; border-radius: 3px;">${emailData.meetingInfo.meeting_id}</code>
                            </p>
                        </div>

                        ${GoogleMeetService.generateMeetingInstructions(emailData.meetingInfo)}

                        <div style="background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #495057; margin-top: 0;">‚úÖ CHECKLIST TR∆Ø·ªöC KHI THAM GIA</h4>
                            <ul style="color: #495057;">
                                <li>‚úÖ Ki·ªÉm tra k·∫øt n·ªëi internet</li>
                                <li>‚úÖ Test camera v√† microphone</li>
                                <li>‚úÖ T√¨m n∆°i y√™n tƒ©nh</li>
                                <li>‚úÖ Chu·∫©n b·ªã c√°c c√¢u h·ªèi c·∫ßn t∆∞ v·∫•n</li>
                                <li>‚úÖ ƒê√≥ng c√°c ·ª©ng d·ª•ng kh√¥ng c·∫ßn thi·∫øt</li>
                                <li>‚úÖ ƒê·∫£m b·∫£o ƒë√£ ƒëƒÉng nh·∫≠p t√†i kho·∫£n Google</li>
                            </ul>
                        </div>

                        <div style="background-color: #d1ecf1; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #bee5eb;">
                            <h4 style="color: #0c5460; margin-top: 0;">üí° QUAN TR·ªåNG</h4>
                            <p style="color: #0c5460; margin: 0;">
                                ƒê√¢y l√† cu·ªôc h·ªçp Google Meet th·ª±c t·∫ø ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông. 
                                B·∫°n s·∫Ω ƒë∆∞·ª£c th√™m v√†o l·ªãch Google Calendar v√† c√≥ th·ªÉ tham gia tr·ª±c ti·∫øp t·ª´ link tr√™n.
                            </p>
                        </div>

                        <p style="text-align: center; color: #666; font-style: italic;">
                            N·∫øu b·∫°n g·∫∑p kh√≥ khƒÉn khi tham gia, vui l√≤ng li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i.
                        </p>
                        
                        <p style="text-align: center; margin-top: 30px;">
                            <strong style="color: #2a9d8f;">${process.env.APP_NAME ?? 'GenCare'}</strong>
                        </p>
                    </div>
                </body>`
            };

            await transporter.sendMail(mailContent);

            return {
                success: true,
                message: 'Appointment confirmation email with real Google Meet sent successfully'
            };
        } catch (error) {
            console.error('Error sending appointment confirmation email:', error);
            return {
                success: false,
                message: `Failed to send confirmation email: ${error.message}`
            };
        }
    }

    /**
     * Send meeting reminder email - Updated for real Google Meet
     */
    public static async sendMeetingReminder(emailData: AppointmentEmailData, minutesBefore: number): Promise<{ success: boolean; message: string }> {
        try {
            if (!emailData.meetingInfo) {
                throw new Error('Meeting information is required for reminder');
            }

            const transporter = this.getTransporter();

            const mailContent = {
                from: `"GenCare - Nh·∫Øc l·ªãch t∆∞ v·∫•n" <${process.env.EMAIL_FOR_VERIFY}>`,
                to: emailData.customerEmail,
                subject: `‚è∞ Nh·∫Øc nh·ªü: Cu·ªôc t∆∞ v·∫•n s·∫Øp b·∫Øt ƒë·∫ßu trong ${minutesBefore} ph√∫t`,
                html: `
                <body style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px;">
                    <div style="max-width: 600px; margin: auto; background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
                        <h2 style="color: #ff6b35; text-align: center;">‚è∞ Nh·∫Øc nh·ªü cu·ªôc t∆∞ v·∫•n</h2>
                        
                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center;">
                            <h3 style="color: #856404; margin-top: 0;">Cu·ªôc t∆∞ v·∫•n s·∫Ω b·∫Øt ƒë·∫ßu trong ${minutesBefore} ph√∫t!</h3>
                            <p><strong>Chuy√™n gia:</strong> ${emailData.consultantName}</p>
                            <p><strong>Th·ªùi gian:</strong> ${emailData.startTime} - ${emailData.endTime}</p>
                        </div>

                        <div style="background-color: #d4edda; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center;">
                            <h3 style="color: #155724; margin-top: 0;">üìπ THAM GIA NGAY</h3>
                            <p style="margin: 15px 0;">
                                <a href="${emailData.meetingInfo.meet_url}" 
                                   style="background-color: #28a745; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                                    üöÄ THAM GIA GOOGLE MEET
                                </a>
                            </p>
                            <p style="margin: 10px 0; font-size: 14px;">
                                <strong>Meeting ID:</strong> <code style="background-color: #f8f9fa; padding: 2px 4px; border-radius: 3px;">${emailData.meetingInfo.meeting_id}</code>
                            </p>
                        </div>

                        ${GoogleMeetService.generateReminderText(minutesBefore)}

                        <p style="text-align: center; margin-top: 30px;">
                            <strong style="color: #2a9d8f;">${process.env.APP_NAME ?? 'GenCare'}</strong>
                        </p>
                    </div>
                </body>`
            };

            await transporter.sendMail(mailContent);

            return {
                success: true,
                message: 'Meeting reminder email sent successfully'
            };
        } catch (error) {
            console.error('Error sending meeting reminder email:', error);
            return {
                success: false,
                message: `Failed to send reminder email: ${error.message}`
            };
        }
    }

    /**
     * Send feedback reminder email after appointment completion
     */
    public static async sendFeedbackReminder(emailData: AppointmentEmailData): Promise<{ success: boolean; message: string }> {
        try {
            const transporter = this.getTransporter();

            const mailContent = {
                from: `"GenCare - ƒê√°nh gi√° d·ªãch v·ª•" <${process.env.EMAIL_FOR_VERIFY}>`,
                to: emailData.customerEmail,
                subject: `‚≠ê H√£y ƒë√°nh gi√° cu·ªôc t∆∞ v·∫•n v·ªõi ${emailData.consultantName}`,
                html: `
                <body style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px;">
                    <div style="max-width: 600px; margin: auto; background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
                        <h2 style="color: #2a9d8f; text-align: center;">‚≠ê C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• t∆∞ v·∫•n!</h2>
                        
                        <div style="background-color: #e9f7f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
                            <h3 style="color: #2a9d8f; margin-top: 0;">üìã TH√îNG TIN CU·ªòC T√ÅO V·∫§N</h3>
                            <p><strong>üë©‚Äç‚öïÔ∏è Chuy√™n gia t∆∞ v·∫•n:</strong> ${emailData.consultantName}</p>
                            <p><strong>üìÖ Ng√†y:</strong> ${emailData.appointmentDate}</p>
                            <p><strong>‚è∞ Th·ªùi gian:</strong> ${emailData.startTime} - ${emailData.endTime}</p>
                        </div>

                        <div style="background-color: #fff3cd; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center;">
                            <h3 style="color: #856404; margin-top: 0;">üí≠ Chia s·∫ª tr·∫£i nghi·ªám c·ªßa b·∫°n</h3>
                            <p style="color: #856404; margin: 15px 0;">
                                Ch·∫•t l∆∞·ª£ng t∆∞ v·∫•n c√≥ ƒë√°p ·ª©ng mong ƒë·ª£i c·ªßa b·∫°n kh√¥ng? 
                                H√£y d√†nh 2 ph√∫t ƒë·ªÉ ƒë√°nh gi√° v√† gi√∫p ch√∫ng t√¥i c·∫£i thi·ªán d·ªãch v·ª•!
                            </p>
                            <p style="margin: 20px 0;">
                                <a href="${process.env.FRONTEND_URL ?? 'http://localhost:5173'}/my-appointments?feedback=${emailData.appointmentId}"
                                   style="background-color: #ffc107; color: #212529; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; display: inline-block;">
                                    ‚≠ê ƒê√ÅNH GI√Å NGAY
                                </a>
                            </p>
                        </div>

                        <div style="background-color: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <h4 style="color: #495057; margin-top: 0;">üéØ T·∫°i sao ƒë√°nh gi√° quan tr·ªçng?</h4>
                            <ul style="color: #495057; margin: 0; padding-left: 20px;">
                                <li>‚úÖ Gi√∫p c·∫£i thi·ªán ch·∫•t l∆∞·ª£ng d·ªãch v·ª•</li>
                                <li>‚úÖ H·ªó tr·ª£ chuy√™n gia ph√°t tri·ªÉn k·ªπ nƒÉng</li>
                                <li>‚úÖ Gi√∫p kh√°ch h√†ng kh√°c l·ª±a ch·ªçn ph√π h·ª£p</li>
                                <li>‚úÖ X√¢y d·ª±ng c·ªông ƒë·ªìng chƒÉm s√≥c s·ª©c kh·ªèe t·ªët h∆°n</li>
                            </ul>
                        </div>

                        <div style="background-color: #d1ecf1; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #bee5eb;">
                            <h4 style="color: #0c5460; margin-top: 0;">‚è∞ L∆∞u √Ω</h4>
                            <p style="color: #0c5460; margin: 0; font-size: 14px;">
                                B·∫°n c√≥ th·ªÉ ƒë√°nh gi√° trong v√≤ng <strong>7 ng√†y</strong> sau khi cu·ªôc t∆∞ v·∫•n k·∫øt th√∫c. 
                                ƒê√°nh gi√° c√≥ th·ªÉ ch·ªânh s·ª≠a trong v√≤ng 24 gi·ªù ƒë·∫ßu.
                            </p>
                        </div>

                        <p style="text-align: center; color: #666; font-style: italic; margin-top: 30px;">
                            C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng v√† s·ª≠ d·ª•ng d·ªãch v·ª• GenCare!
                        </p>
                        
                        <p style="text-align: center; margin-top: 20px;">
                            <strong style="color: #2a9d8f;">${process.env.APP_NAME ?? 'GenCare'}</strong><br>
                            <small style="color: #666;">ChƒÉm s√≥c s·ª©c kh·ªèe, ƒê·ªìng h√†nh c√πng b·∫°n</small>
                        </p>
                    </div>
                </body>`
            };

            await transporter.sendMail(mailContent);

            return {
                success: true,
                message: 'Feedback reminder email sent successfully'
            };
        } catch (error) {
            console.error('Error sending feedback reminder email:', error);
            return {
                success: false,
                message: `Failed to send feedback reminder email: ${error.message}`
            };
        }
    }

    /**
     * Send appointment cancellation email
     */
    public static async sendAppointmentCancellation(emailData: AppointmentEmailData, cancelledBy: string, reason?: string): Promise<{ success: boolean; message: string }> {
        try {
            const transporter = this.getTransporter();

            const mailContent = {
                from: `"GenCare - H·ªßy l·ªãch t∆∞ v·∫•n" <${process.env.EMAIL_FOR_VERIFY}>`,
                to: emailData.customerEmail,
                subject: `‚ùå L·ªãch t∆∞ v·∫•n ƒë√£ ƒë∆∞·ª£c h·ªßy - ${emailData.appointmentDate} l√∫c ${emailData.startTime}`,
                html: `
                <body style="font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 20px;">
                    <div style="max-width: 600px; margin: auto; background-color: #fff; padding: 30px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
                        <h2 style="color: #dc3545; text-align: center;">‚ùå L·ªãch t∆∞ v·∫•n ƒë√£ ƒë∆∞·ª£c h·ªßy</h2>
                        
                        <div style="background-color: #f8d7da; padding: 20px; border-radius: 8px; margin: 20px 0;">
                            <h3 style="color: #721c24; margin-top: 0;">üìÖ TH√îNG TIN CU·ªòC H·∫∏N ƒê√É H·ª¶Y</h3>
                            <p><strong>üë©‚Äç‚öïÔ∏è Chuy√™n gia t∆∞ v·∫•n:</strong> ${emailData.consultantName}</p>
                            <p><strong>üìÖ Ng√†y:</strong> ${emailData.appointmentDate}</p>
                            <p><strong>‚è∞ Th·ªùi gian:</strong> ${emailData.startTime} - ${emailData.endTime}</p>
                            <p><strong>üôã‚Äç‚ôÇÔ∏è Ng∆∞·ªùi h·ªßy:</strong> ${cancelledBy}</p>
                            ${reason ? `<p><strong>üìù L√Ω do:</strong> ${reason}</p>` : ''}
                        </div>

                        <div style="background-color: #d1ecf1; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p style="color: #0c5460; margin: 0; text-align: center;">
                                Ch√∫ng t√¥i xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y. B·∫°n c√≥ th·ªÉ ƒë·∫∑t l·ªãch t∆∞ v·∫•n m·ªõi b·∫•t c·ª© l√∫c n√†o.
                            </p>
                        </div>

                        <p style="text-align: center; margin-top: 30px;">
                            <strong style="color: #2a9d8f;">${process.env.APP_NAME ?? 'GenCare'}</strong>
                        </p>
                    </div>
                </body>`
            };

            await transporter.sendMail(mailContent);

            return {
                success: true,
                message: 'Appointment cancellation email sent successfully'
            };
        } catch (error) {
            console.error('Error sending appointment cancellation email:', error);
            return {
                success: false,
                message: `Failed to send cancellation email: ${error.message}`
            };
        }
    }

}