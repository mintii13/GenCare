import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Blog, BlogFilters as BlogFiltersType } from '../../types/blog';
import { blogService } from '../../services/blogService';
import { useAuth } from '../../contexts/AuthContext';
import BlogCard from '../../components/blog/BlogCard';
import BlogFilters from '../../components/blog/BlogFilters';
import { Plus, FileText, Loader, Wifi } from 'lucide-react';
import { runAllAPITests } from '../../utils/testAPI';

const BlogListPage: React.FC = () => {
  const navigate = useNavigate();
  const { user } = useAuth();
  
  const [blogs, setBlogs] = useState<Blog[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [apiTesting, setApiTesting] = useState(false);
  const [filters, setFilters] = useState<BlogFiltersType>({
    sortBy: 'publish_date',
    sortOrder: 'desc'
  });

  const isConsultant = user?.role === 'consultant';

  useEffect(() => {
    fetchBlogs();
  }, [filters]);

  const fetchBlogs = async () => {
    setLoading(true);
    setError(null);
    try {
      console.log('üîç Fetching blogs with filters:', filters);
      const response = await blogService.getBlogs(filters);
      console.log('üìä API Response:', response);
      
      if (response.success) {
        // L·ªçc blog_id h·ª£p l·ªá (24 k√Ω t·ª±)
        const validBlogs = response.data.blogs.filter(
          (blog) => typeof blog.blog_id === 'string' && blog.blog_id.length === 24
        );
        console.log('‚úÖ Blogs loaded successfully:', validBlogs.length, 'blogs');
        setBlogs(validBlogs);
      } else {
        console.error('‚ùå API returned success: false');
        setError(response.message || 'C√≥ l·ªói x·∫£y ra khi t·∫£i danh s√°ch blog');
      }
    } catch (error) {
      console.error('üí• Error fetching blogs:', error);
      setError('Kh√¥ng th·ªÉ t·∫£i danh s√°ch blog. Vui l√≤ng th·ª≠ l·∫°i sau.');
    } finally {
      setLoading(false);
    }
  };

  const handleBlogClick = (blogId: string) => {
    navigate(`/blogs/${blogId}`);
  };

  const handleFiltersChange = (newFilters: BlogFiltersType) => {
    setFilters(newFilters);
  };

  const handleClearFilters = () => {
    setFilters({
      sortBy: 'publish_date',
      sortOrder: 'desc'
    });
  };

  const handleCreateBlog = () => {
    navigate('/blogs/create');
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <Loader className="w-8 h-8 animate-spin mx-auto mb-4 text-blue-600" />
          <p className="text-gray-600">ƒêang t·∫£i danh s√°ch blog...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-2">
              Blog S·ª©c Kh·ªèe Sinh S·∫£n
            </h1>
            <p className="text-gray-600">
              Kh√°m ph√° nh·ªØng ki·∫øn th·ª©c h·ªØu √≠ch v·ªÅ s·ª©c kh·ªèe sinh s·∫£n t·ª´ c√°c chuy√™n gia
            </p>
          </div>
          
          <div className="flex gap-3">
            {isConsultant && (
              <button
                onClick={handleCreateBlog}
                className="flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
              >
                <Plus className="w-5 h-5 mr-2" />
                Vi·∫øt b√†i m·ªõi
              </button>
            )}
          </div>
        </div>

        {/* Filters */}
        <BlogFilters
          filters={filters}
          onFiltersChange={handleFiltersChange}
          onClearFilters={handleClearFilters}
        />

        {/* Error message */}
        {error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <p className="text-red-800">{error}</p>
            <button
              onClick={fetchBlogs}
              className="mt-2 text-red-600 hover:text-red-800 font-medium"
            >
              Th·ª≠ l·∫°i
            </button>
          </div>
        )}

        {/* Blog grid */}
        {blogs.length > 0 ? (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {blogs.map((blog) => (
              <BlogCard
                key={blog.blog_id}
                blog={blog}
                onClick={handleBlogClick}
              />
            ))}
          </div>
        ) : !loading && (
          <div className="text-center py-12">
            <FileText className="w-16 h-16 mx-auto mb-4 text-gray-300" />
            <h3 className="text-xl font-medium text-gray-900 mb-2">
              Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt
            </h3>
            <p className="text-gray-600 mb-4">
              {filters.searchQuery || filters.specialization
                ? 'Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ƒë·ªÉ t√¨m th·∫•y nhi·ªÅu b√†i vi·∫øt h∆°n.'
                : 'Ch∆∞a c√≥ b√†i vi·∫øt n√†o ƒë∆∞·ª£c ƒëƒÉng t·∫£i.'}
            </p>
            {(filters.searchQuery || filters.specialization) && (
              <button
                onClick={handleClearFilters}
                className="text-blue-600 hover:text-blue-800 font-medium"
              >
                X√≥a b·ªô l·ªçc
              </button>
            )}
          </div>
        )}

        {/* Stats */}
        {blogs.length > 0 && (
          <div className="mt-8 text-center text-gray-600">
            <p>Hi·ªÉn th·ªã {blogs.length} b√†i vi·∫øt</p>
          </div>
        )}

        {/* Info for consultants */}
        {isConsultant && blogs.length === 0 && !filters.searchQuery && !filters.specialization && (
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 mt-6">
            <h3 className="text-lg font-medium text-blue-900 mb-2">
              Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi n·ªÅn t·∫£ng blog!
            </h3>
            <p className="text-blue-800 mb-4">
              V·ªõi t∆∞ c√°ch l√† chuy√™n gia t∆∞ v·∫•n, b·∫°n c√≥ th·ªÉ chia s·∫ª ki·∫øn th·ª©c v√† kinh nghi·ªám c·ªßa m√¨nh 
              th√¥ng qua vi·ªác vi·∫øt blog. H√£y b·∫Øt ƒë·∫ßu t·∫°o b√†i vi·∫øt ƒë·∫ßu ti√™n c·ªßa b·∫°n!
            </p>
            <button
              onClick={handleCreateBlog}
              className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              <Plus className="w-4 h-4 mr-2" />
              Vi·∫øt b√†i ƒë·∫ßu ti√™n
            </button>
          </div>
        )}

        {/* Info for customers */}
        {user?.role === 'customer' && (
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 mt-6">
            <h3 className="text-lg font-medium text-green-900 mb-2">
              Tham gia th·∫£o lu·∫≠n
            </h3>
            <p className="text-green-800">
              B·∫°n c√≥ th·ªÉ b√¨nh lu·∫≠n v√† th·∫£o lu·∫≠n v·ªõi c√°c chuy√™n gia v·ªÅ nh·ªØng ch·ªß ƒë·ªÅ 
              s·ª©c kh·ªèe sinh s·∫£n m√† b·∫°n quan t√¢m. ƒê·ª´ng ng·∫ßn ng·∫°i ƒë·∫∑t c√¢u h·ªèi!
            </p>
          </div>
        )}
      </div>
    </div>
  );
};

export default BlogListPage; 